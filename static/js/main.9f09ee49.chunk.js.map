{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForms.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","Capitalize","message","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForms","wordCount","text","split","length","setText","useState","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","handleUpClicked","newtext","showalert","handleLoClicked","document","getElementById","select","navigator","clipboard","writeText","join","App","setmode","setalert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.9f09ee49.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const Capitalize=(word)=>{      \r\n           const lower=word.toLowerCase();\r\n           return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n   <strong>{Capitalize(props.alert.type)}</strong>:{props.alert.message}\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.AboutText}About</Link>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n<div className={`form-check form-switch text-${props.mode ==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes ={title: PropTypes.string.isRequired,\r\n                   About:PropTypes.string.isRequired}\r\n \r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForms(props) {\r\n    const handleUpClicked=()=>{\r\n        //console.log(\"HandelUpClicked\"+text)\r\n        let newtext=text.toUpperCase();\r\n        setText(newtext)\r\n        props.showalert(\"Converted to Upper case\",\"success\")\r\n    }\r\n    const handleLoClicked=()=>{\r\n        //console.log(\"HandelUpClicked\"+text)\r\n        let newtext=text.toLowerCase();\r\n        setText(newtext)\r\n        props.showalert(\"Converted to Lower case\",\"success\")\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        //console.log(\"On changed\")\r\n        setText(event.target.value)\r\n    }\r\n    const handleCopy=(event)=>{\r\n      let text = document.getElementById(\"mybox\")\r\n     text.select()\r\n     navigator.clipboard.writeText(text.value)\r\n     props.showalert(\"Text Copied to clipboard\",\"success\")\r\n    }\r\n    const handleExtraSpace=(event)=>{\r\n    let newtext=text.split(/[ ]+/)\r\n    setText(newtext.join(\" \"))\r\n    props.showalert(\"Extra Space has been Removed\",\"success\")\r\n    }\r\n    const wordCount = (text)=>{\r\n        let regex = /\\s+\\S+/;\r\n        let numOfWords = text.split(regex);\r\n        return numOfWords.length;\r\n      }\r\n    const [text,setText]= useState(\"\");\r\n    \r\n    return (\r\n        <>\r\n    <div className=\"container my-3\" style={{color:props.mode ==='dark'?'white':'#042743'}}>\r\n    <h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor : props.mode ==='dark'?'#525176':'white',color:props.mode ==='dark'?'white':'#042743'}}  id=\"mybox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClicked}>Convert to Upper Case</button>\r\n<button className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClicked}>Convert to Lower Case</button>\r\n<button className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n<button className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpace}>Handle Extra Space</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode ==='dark'?'white':'#042743'}}>\r\n        <h2>Your text Summary</h2>\r\n        <p>{text===\"\"? 0 : wordCount(text)} words and {text.length} characters</p>\r\n        <p>{ text===\"\"? 0 * 0.008 : wordCount(text) * 0.008} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in Above text to Preview here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","\nimport './App.css';\nimport Alert from './components/Alert';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForms from './components/TextForms';\nimport  React,{useState} from 'react'\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n  \n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode,setmode]=useState('light')\n  const [alert,setalert]=useState(null)\n  const showalert=(message,type)=>{\n    setalert({\n         message:message,\n         type:type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor='#042743';\n      showalert(\"Dark mode has been Enabled\",\"success\")\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      showalert(\"light mode has been Enabled\",\"success\")\n    }\n  }\n  return (\n    <>\n\n      <Navbar title=\"TextUtils\" mode ={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <TextForms heading = \"Enter your text to analyse\" mode ={mode} showalert = {showalert}/>\n    \n      {/* <Router>\n      <div className=\"container my-3\">\n      \n      <Routes>\n          <Route exect path=\"/About\" element={<About/>} />\n          </Routes>\n        <Routes>\n          <Route exect path=\"/\" element={<TextForms heading = \"Enter your text to analyse\" mode ={mode} showalert = {showalert}/>} />\n          </Routes>\n          \n      </div>\n      </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}